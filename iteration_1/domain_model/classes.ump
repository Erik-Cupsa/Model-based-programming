class Hotel
{
  1 hotel <@>- * User person;
}

class User
{
  abstract;
  unique accountName;
  password;
  lazy name;
  lazy phoneNumber;
  
}

class Manager
{
  isA User;

}

class Guest
{
  isA User;
}

class Employee
{
  isA User;
    * maintenanceStaff -- * MaintenanceTicket task ;
  * staff -- 1 Manager boss;
}

class MaintenanceTicket
{
  enum Urgency {Urgent, Normal, Low}
  enum TimeEstimate {less_than_day, one_to_3_days, three_to_seven_days, one_to_three_weeks, three_plus_weeks};
  Urgency urgency;
  Boolean hasManagerApproval;
  Boolean requiresManagerApproval;
  Date dateOpened;
  TimeEstimate timeEstimate;
   
  * issue -- 1 User ticketInitiator;
  * ticket -- 1 Manager manager;
  
}

class Asset
{
  unique Integer assetNumber;
  Date purchaseDate;
  
  * -- 1 Location;
  * asset -<@> 1 AssetType;
   1 asset <@>- * MaintenanceTicket;
}

class AssetType
{
  category;
  Integer expectedLifespan;
  
}

class Location
{
  abstract;
  Integer number;
}

class MaintenanceNote
{
  note;
  Date creationDate;
  * note -<@> 1 MaintenanceTicket;
}

class AssetPlus
{
  1 AssetPlus <@>- * Hotel;
}


class Floor
{
  isA Location;
  1 <@>- * Room;
}

class Room
{
  isA Location;
}

class Image
{
 url;
* image -<@> 1 MaintenanceTicket maintenanceRequest;
}

