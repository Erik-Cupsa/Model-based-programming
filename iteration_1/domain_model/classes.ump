class AssetPlus
{
  1 <@>- * Location;
  1 <@>- * AssetType;
  1 <@>- * User;
}

class User
{
  abstract;
  immutable  accountName;
  password;
  lazy name;
  lazy phoneNumber;
  
}

class Guest
{
  isA User;
}

class Employee
{
  isA User;
    * maintenanceStaff -- * MaintenanceTicket maintenanceTask ;
  * -- 1 Manager ;
}

class Manager {
  isA Employee;
} 

class MaintenanceTicket
{
 enum Urgency {Urgent,  Normal, Low}
 enum TimeEstimate {lessThanADay, oneToThreeDays, threeToSevenDays, oneToThreeWeeks, threeOrMoreWeeks};
  autounique ticketNumber;
  lazy Urgency urgency;
  lazy Boolean requiresManagerApproval;
  lazy TimeEstimate timeEstimate;
  Date dateOpened;
  
   
  * ticketsOpened -- 1 User ticketInitiator;
  * ticketsToApprove -- 1 Manager reviewer;
  
}

class Asset
{
  unique Integer assetNumber;
  Date purchaseDate;
  
  * -- 1 Location;
  *  -<@> 1 AssetType ;
   1 <@>- * MaintenanceTicket;
}

class AssetType
{
  category;
  Integer expectedLifespan;
  
}

class Location
{
  abstract;
  unique Integer number;
}

class MaintenanceNote
{
  Boolean resolved;
  lazy Boolean hasManagerApproval;
  description;
  Date creationDate;
  * -<@> 1 MaintenanceTicket;
}


class Floor
{
  isA Location;
  1 <@>- * Room ;
}

class Room
{
  isA Location;
}

class Image
{
 url;
* -<@> 1 MaintenanceTicket ;
}
